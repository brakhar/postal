import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.4.1.RELEASE'
    }
}

repositories {
    maven {
        url "http://repository.jboss.org"
    }
    mavenLocal()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'

sourceSets {
    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'test'
        }

    }
}
compileJava {
    options.fork = 'true'
    options.forkOptions.with {
        memoryMaximumSize = '2048m'
    }
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions.forkOptions) {
        memoryMaximumSize = '1g'
        jvmArgs = ['-XX:MaxPermSize=512m', '-Xms512m', '-Xmx1g']
    }
}


def tomcatHome = ''
def tileVersion = '3.0.1'
def springVersion = '4.0.3.RELEASE'
def hibernateVersion = '4.3.4.Final'
def derbyVersion = '10.11.1.1'


def hibernateOgmVersion = '4.0.0.Beta2'
def hibernateOgmMongoVersion = '4.0.0.Beta1'

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:1.1.2.RELEASE'
    }
}

dependencies {

    compile group: 'javax.validation', name:'validation-api'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api'
    compile group: 'javax.transaction', name: 'jta', version: '1.1'
    compile group: 'javax.inject', name: 'javax.inject'

    compile group: "org.hibernate", name:"hibernate-validator"
    compile group: 'org.hibernate', name: 'hibernate-entitymanager'
    compile group: 'org.hibernate', name: 'hibernate-core'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.3-1102-jdbc41'

    compile group: "org.glassfish.web", name:"javax.el", version: "2.2.2"

    compile group: 'org.slf4j', name: 'slf4j-api'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j'
    compile group: 'ch.qos.logback', name: 'logback-classic'

    compile group: 'org.springframework', name: 'spring-webmvc'
    compile group: 'org.springframework', name: 'spring-orm'
    compile group: 'org.springframework', name: 'spring-tx'
    compile group: 'org.springframework', name: 'spring-jdbc'
    compile group: 'org.springframework.data', name:'spring-data-jpa'

    compile group: 'commons-dbcp', name: 'commons-dbcp'
    compile group: 'commons-fileupload', name: 'commons-fileupload'
    compile group: 'commons-io', name: 'commons-io'

    compile group: 'jstl', name: 'jstl', version: '1.2'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.8.1'

    compile group: 'org.apache.tiles', name: 'tiles-jsp'
    compile group: 'org.apache.httpcomponents', name: 'httpclient'
    compile group: 'com.google.code.gson', name: 'gson'
    compile group: 'org.json', name: 'json', version: "20090211"

    compile fileTree(dir: 'lib', include: ['*.jar'])

    compile group: 'org.springframework.security', name: 'spring-security-core'
    compile group: 'org.springframework.security', name: 'spring-security-web'
    compile group: 'org.springframework.security', name: 'spring-security-config'
    compile group: 'net.sourceforge.htmlcleaner',  name: 'htmlcleaner', version:'2.2'


    testCompile group: 'org.springframework', name: 'spring-test', version: "${springVersion}"
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    testCompile group: 'org.mock-server', name: 'mockserver-netty', version: '3.9.2'
}

task checkWin(){
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        tomcatHome = 'D://java//Tomcat 7.0'
    } else {
        tomcatHome = '/opt/tomcat/'
    }
}

task deployToTomcat(dependsOn:'checkWin', type: Copy) {
    from war
    into "${tomcatHome}/webapps"
    print "${tomcatHome}/webapps"
}
